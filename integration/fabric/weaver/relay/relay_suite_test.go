/*
Copyright IBM Corp All Rights Reserved.

SPDX-License-Identifier: Apache-2.0
*/

package relay_test

import (
	"testing"

	. "github.com/onsi/ginkgo"
	. "github.com/onsi/gomega"

	"github.com/hyperledger-labs/fabric-smart-client/integration"
)

func TestEndToEnd(t *testing.T) {
	RegisterFailHandler(Fail)
	RunSpecs(t, "Two Fabric Networks Suite with Weaver Relay")
}

func StartPort() int {
	return integration.TwoFabricNetworksWithWeaverRelayPort.StartPortForNode()
}

/*func TestFoo(t *testing.T) {
	b64View := "CjIIAxIYMjAyMC0xMC0yMVQwMDo0MzozOC43NDVaGgxOb3Rhcml6YXRpb24iBlNUUklORxKyIgpCCMgBGj0SO2xvY2FsaG9zdDo5MDgwL25ldHdvcmsxL215Y2hhbm5lbDpzaW1wbGVzdGF0ZTpSZWFkOkFyY3R1cnVzErUWCvEICo4BCAMQARoMCLqIvvwFEMCs5tcCIglteWNoYW5uZWwqQDA2ZGZlMjRmYjI0ZjIzNzM0OWQ1NWU4OWYwODlhYWE3YzUwYzNkZTk4YjlkNDk1MTk1Y2RlYjYyZDk3M2RkNWI6CxIJEgdpbnRlcm9wQiA+JS0+CcZf80ezjtkGSZsXyO2J8APik0Jb8+UkTqh/eRLdBwrABwoHT3JnMU1TUBK0By0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDa0RDQ0FqZWdBd0lCQWdJVU9wcW45SDZQVTM2cFNoeG5kc0l1VHVvQ0ZLc3dDZ1lJS29aSXpqMEVBd0l3CmNqRUxNQWtHQTFVRUJoTUNWVk14RnpBVkJnTlZCQWdURGs1dmNuUm9JRU5oY205c2FXNWhNUTh3RFFZRFZRUUgKRXdaRWRYSm9ZVzB4R2pBWUJnTlZCQW9URVc5eVp6RXVibVYwZDI5eWF6RXVZMjl0TVIwd0d3WURWUVFERXhSagpZUzV2Y21jeExtNWxkSGR2Y21zeExtTnZiVEFlRncweU1EQTRNVEV3TmpJNU1EQmFGdzB5TVRBNE1URXdOak0wCk1EQmFNRUl4TURBTkJnTlZCQXNUQm1Oc2FXVnVkREFMQmdOVkJBc1RCRzl5WnpFd0VnWURWUVFMRXd0a1pYQmgKY25SdFpXNTBNVEVPTUF3R0ExVUVBeE1GY21Wc1lYa3dXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQwpBQVIyUE84NzBlZVFJMFpPbUJOcEs1bmorMVErbFVrUnZlT0lsVjdZUThaVDVSN1VKdUM3ZlNCa2x4UUtWdm5yCktHajhCNWlXTUozblFXNmhjd2hPa0lFSm80SGFNSUhYTUE0R0ExVWREd0VCL3dRRUF3SUhnREFNQmdOVkhSTUIKQWY4RUFqQUFNQjBHQTFVZERnUVdCQlQ4dmtRK3FzdGFtNUUwQnFqUnBqZUhCdDZBZlRBZkJnTlZIU01FR0RBVwpnQlRXRDYwK2VDSGJEeUQzM1BXYkN4VnVRcU1BcVRCM0JnZ3FBd1FGQmdjSUFRUnJleUpoZEhSeWN5STZleUpvClppNUJabVpwYkdsaGRHbHZiaUk2SW05eVp6RXVaR1Z3WVhKMGJXVnVkREVpTENKb1ppNUZibkp2Ykd4dFpXNTAKU1VRaU9pSnlaV3hoZVNJc0ltaG1MbFI1Y0dVaU9pSmpiR2xsYm5RaUxDSnlaV3hoZVNJNkluUnlkV1VpZlgwdwpDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdYS3JsN1ZCUXdDcXlWeldhZXJDSEpaMGF2ekxuVjQrc05mV0RYM1VhCjNiMENJSHZCRUhBbzBBNXBvQkZDcll2SnkySjdxbDhKVUxFODhkelVNQ2EvUWxRSgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tChIY195X6izbE8AzUdxK8mcZD8K+SFVLYdK4Er4NCrsNCrgNCAESCRIHaW50ZXJvcBqoDQoVSGFuZGxlRXh0ZXJuYWxSZXF1ZXN0CowNQ2hWYkltOXlaekV1Ym1WMGQyOXlhekV1WTI5dElsMFNPMnh2WTJGc2FHOXpkRG81TURnd0wyNWxkSGR2Y21zeEwyMTVZMmhoYm01bGJEcHphVzF3YkdWemRHRjBaVHBTWldGa09rRnlZM1IxY25WekdneEdZV0p5YVdOZlVtVnNZWGtpQ0c1bGRIZHZjbXN4S3QwSExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVU55VkVORFFXeFRaMEYzU1VKQlowbFZTRU5YTHpCdFYweGhjMmhJU0c5emQweHhWV2hwSzFGd1JFYzRkME5uV1VsTGIxcEplbW93UlVGM1NYY0tZMnBGVEUxQmEwZEJNVlZGUW1oTlExWldUWGhHZWtGV1FtZE9Wa0pCWjFSRWF6VjJZMjVTYjBsRlRtaGpiVGx6WVZjMWFFMVJPSGRFVVZsRVZsRlJTQXBGZDFwRlpGaEtiMWxYTUhoSGFrRlpRbWRPVmtKQmIxUkZWemw1V25wRmRXSnRWakJrTWpsNVlYcEZkVmt5T1hSTlVqQjNSM2RaUkZaUlVVUkZlRkpxQ2xsVE5YWmpiV040VEcwMWJHUklaSFpqYlhONFRHMU9kbUpVUVdWR2R6QjVUVVJCTTAxcWEzZE9SRTB5VFVSQ1lVWjNNSGxOVkVFelRXcHJkMDVFVVhnS1RVUkNZVTFHTUhoRGVrRktRbWRPVmtKQldWUkJiRlpVVFZKamQwWlJXVVJXVVZGSlJYYzFUMkl6U2pCaFEwSkVXVmhLZG1KSGJIVlpWRVZWVFVKSlJ3cEJNVlZGUTJoTlRGTkliSGRhV0VweldsZFNibHBZU1hoRWVrRk9RbWRPVmtKQmMxUkNiVTV6WVZkV2RXUkVSVTlOUVhkSFFURlZSVUY0VFVaa1dFNXNDbU5xUlhkWFZFRlVRbWRqY1docmFrOVFVVWxDUW1kbmNXaHJhazlRVVUxQ1FuZE9RMEZCVTNWb0wzSldRMlk0VDBSMWR6QkphRzV5VFRKcGFXWXlZVGNLYzBkVU9FSkpWakZRUlVSVk0xTnVjVU5zYldnclVsWXZNMHA1UzJ3dlZIbDBhSHBPTDFwV2JrdEZMM1IyTldReloxWlhZazV6ZEdNNU55dFRielJJWXdwTlNVaGFUVUUwUjBFeFZXUkVkMFZDTDNkUlJVRjNTVWhuUkVGTlFtZE9Wa2hTVFVKQlpqaEZRV3BCUVUxQ01FZEJNVlZrUkdkUlYwSkNVWGd2YUV4WkNrTk9SelJsZWtOeGRtZFVTME12VjNkMVUxWnViVVJCWmtKblRsWklVMDFGUjBSQlYyZENWRmRFTmpBclpVTklZa1I1UkRNelVGZGlRM2hXZFZGeFRVRUtjVlJCWmtKblRsWklVa1ZGUjBSQlYyZG9VblpaZWxWNFRVUk5NMDVFWTNwUFJFRjFZVmRLZEV4dFRuWmlWRUpaUW1kbmNVRjNVVVpDWjJOSlFWRlNUUXBsZVVwb1pFaFNlV041U1RabGVVcHZXbWsxUWxwdFduQmlSMnhvWkVkc2RtSnBTVFpKYVVselNXMW9iVXhyVm5WamJUbHpZa2N4YkdKdVVrcFNRMGsyQ2tsdVZucGFXRWw0U1dsM2FXRkhXWFZXU0d4M1dsTkpOa2x0VG5OaFYxWjFaRU5LT1daVVFVdENaMmR4YUd0cVQxQlJVVVJCWjA1SVFVUkNSVUZwUVVZS2JuTk1ObFYxZUZSdFNrczVibWhrVFUxUU5XeFdOM2h1ZVZsc01WZDVSR2w2UlZGelpuZDFUMXAzU1dkWVkzZHVTRTloVlVSWFdXcG1XSFJHVTBrMWVRcDZXamx0Y2paUVJXdFNORVIwVkVoSlVrWmhUVll4T0QwS0xTMHRMUzFGVGtRZ1EwVlNWRWxHU1VOQlZFVXRMUzB0TFFveVlFMUZVVU5KUVhKR1NHWjFRMGhMZDJabE9XbFBibUZ6YlM5VlUzSm1SR1pNTDBkTllVVkhWR1JDVEU5elRVcFhSMEZwUWtSUVRpOW5TMjlZY3pWb2RURXJhbEJPVjJsSGNWWXZkR3hDUlRGc2FXWXlWRWRDTlV0T2NIUXZZWGM5UFVJa1lUQTBZalUzT1RJdFpEYzNZeTAwWTJVM0xUbGhOekV0TmpkaU1tRTBNMkpsWW1NelNoRnZjbWN4TG01bGRIZHZjbXN4TG1OdmJRPT0YABr8AgogTkn3oWDphU7301z4YVfZQVOYTAsicf8H0508e9I5nckS1wIKggISZgoKX2xpZmVjeWNsZRJYCigKIm5hbWVzcGFjZXMvZmllbGRzL2ludGVyb3AvU2VxdWVuY2USAggDCiwKJm5hbWVzcGFjZXMvZmllbGRzL3NpbXBsZXN0YXRlL1NlcXVlbmNlEgIIBhJjCgdpbnRlcm9wElgKHgoYAGFjY2Vzc0NvbnRyb2wAbmV0d29yazEAEgIICAoeChgAc2VjdXJpdHlHcm91cABuZXR3b3JrMQASAggKChYKEAD0j7+/aW5pdGlhbGl6ZWQSAggEEjMKC3NpbXBsZXN0YXRlEiQKFgoQAPSPv79pbml0aWFsaXplZBICCAcKCgoIQXJjdHVydXMaQgjIARo9Ejtsb2NhbGhvc3Q6OTA4MC9uZXR3b3JrMS9teWNoYW5uZWw6c2ltcGxlc3RhdGU6UmVhZDpBcmN0dXJ1cyIMEgdpbnRlcm9wGgExIrQICukHCgdPcmcxTVNQEt0HLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNyRENDQWxPZ0F3SUJBZ0lVV01SRTJMQnB2djVOR1JGL2EzLzZxZlNwT1M0d0NnWUlLb1pJemowRUF3SXcKY2pFTE1Ba0dBMVVFQmhNQ1ZWTXhGekFWQmdOVkJBZ1REazV2Y25Sb0lFTmhjbTlzYVc1aE1ROHdEUVlEVlFRSApFd1pFZFhKb1lXMHhHakFZQmdOVkJBb1RFVzl5WnpFdWJtVjBkMjl5YXpFdVkyOXRNUjB3R3dZRFZRUURFeFJqCllTNXZjbWN4TG01bGRIZHZjbXN4TG1OdmJUQWVGdzB5TURBM01qa3dORE0yTURCYUZ3MHlNVEEzTWprd05EUXgKTURCYU1Gc3hDekFKQmdOVkJBWVRBbFZUTVJjd0ZRWURWUVFJRXc1T2IzSjBhQ0JEWVhKdmJHbHVZVEVVTUJJRwpBMVVFQ2hNTFNIbHdaWEpzWldSblpYSXhEVEFMQmdOVkJBc1RCSEJsWlhJeERqQU1CZ05WQkFNVEJYQmxaWEl3Ck1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRTVGUWtIODNFV2dhb0NnZTlrOEhJTUl3Q1RUZVkKcUJHbnE0UDNYckJQZlBIV1d4TWhYaEFoM29Qc1Q5d2drV0dwVWZhaXJuR3RuZEFDdmtKK01CL2cxS09CM1RDQgoyakFPQmdOVkhROEJBZjhFQkFNQ0I0QXdEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVUsyQW4zdEJMCmsxVDJEait3SEdnVEhDc2JiaVl3SHdZRFZSMGpCQmd3Rm9BVTFnK3RQbmdoMnc4Zzk5ejFtd3NWYmtLakFLa3cKSWdZRFZSMFJCQnN3R1lJWGNHVmxjakF1YjNKbk1TNXVaWFIzYjNKck1TNWpiMjB3VmdZSUtnTUVCUVlIQ0FFRQpTbnNpWVhSMGNuTWlPbnNpYUdZdVFXWm1hV3hwWVhScGIyNGlPaUlpTENKb1ppNUZibkp2Ykd4dFpXNTBTVVFpCk9pSndaV1Z5TUNJc0ltaG1MbFI1Y0dVaU9pSndaV1Z5SW4xOU1Bb0dDQ3FHU000OUJBTUNBMGNBTUVRQ0lCYVEKOGhOZFd3bFh5SHFjaG1DN3NVSlZoRHoySDZ6eHczUFBLUjkzeUIvc0FpQkoyemdCWHMvWWwwZm5uck1RdUJBRApwMUFLVEpOSmwxVjBZRUcwWGI1cXBnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoSRjBEAiB/E44ql8sMJNy99qXUWPmalc3mBUKszqvTuPZr0DKW2wIgOxcWZY9h0oqTzIfI67dyDPRkAUpnT+kMfOXxrdtYIu4="
	viewB64Bytes, err := base64.StdEncoding.DecodeString(b64View)
	assert.NoError(t, err)
	var view common.View
	err = proto.Unmarshal(viewB64Bytes, &view)
	assert.NoError(t, err)
	fmt.Println(view.Meta)

	var fabricViewData fabric.FabricView
	err = proto.Unmarshal(view.Data, &fabricViewData)
	assert.NoError(t, err)

	fmt.Println(fabricViewData)
}
*/
